from flask import Flask, render_template, request, redirect, url_for, session, flash
import sqlite3
from werkzeug.security import generate_password_hash, check_password_hash

app = Flask(__name__)
app.secret_key = "your_secret_key"

# 数据库连接函数
def get_db_connection():
    conn = sqlite3.connect('database/movies.db')
    conn.row_factory = sqlite3.Row
    return conn

# 首页 - 展示电影列表
@app.route('/')
def index():
    conn = get_db_connection()
    movies = conn.execute('SELECT * FROM movies').fetchall()
    conn.close()
    return render_template('index.html', movies=movies)

# 注册页面
@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        hashed_password = generate_password_hash(password)

        conn = get_db_connection()
        try:
            conn.execute("INSERT INTO users (username, password) VALUES (?, ?)", (username, hashed_password))
            conn.commit()
            conn.close()
            flash('注册成功，请登录！')
            return redirect(url_for('login'))
        except sqlite3.IntegrityError:
            flash('用户名已存在！')
            conn.close()
            return redirect(url_for('register'))
    return render_template('register.html')

# 登录页面
@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']

        conn = get_db_connection()
        user = conn.execute("SELECT * FROM users WHERE username = ?", (username,)).fetchone()
        conn.close()

        if user and check_password_hash(user['password'], password):
            session['user_id'] = user['id']
            session['username'] = user['username']
            flash('登录成功！')
            return redirect(url_for('index'))
        else:
            flash('用户名或密码错误！')
            return redirect(url_for('login'))
    return render_template('login.html')

# 电影详情页和评论功能
@app.route('/movie/<int:movie_id>', methods=['GET', 'POST'])
def movie(movie_id):
    conn = get_db_connection()
    movie = conn.execute('SELECT * FROM movies WHERE id = ?', (movie_id,)).fetchone()
    reviews = conn.execute('SELECT * FROM reviews WHERE movie_id = ?', (movie_id,)).fetchall()

    if request.method == 'POST':
        if 'user_id' not in session:
            flash('请先登录！')
            return redirect(url_for('login'))

        rating = request.form['rating']
        comment = request.form['comment']
        conn.execute('INSERT INTO reviews (user_id, movie_id, rating, comment) VALUES (?, ?, ?, ?)',
                     (session['user_id'], movie_id, rating, comment))
        conn.commit()
        conn.close()
        flash('评论成功！')
        return redirect(url_for('movie', movie_id=movie_id))

    conn.close()
    return render_template('movie.html', movie=movie, reviews=reviews)

# 退出登录
@app.route('/logout')
def logout():
    session.clear()
    flash('已退出登录！')
    return redirect(url_for('index'))

if __name__ == '__main__':
    app.run(debug=True)
